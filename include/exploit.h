#ifndef exploit_h
#define exploit_h

#include "common.h"

#define koffsetof(struct, entry) kinfo->offsets.struct.entry

typedef struct {
    uint32_t static_base;
    uint32_t kernel_base;
    uint32_t kernel_slide;
    mach_port_t tfp0;
    mach_port_t hid_client;
    uint32_t self_proc_addr;
    uint32_t self_task_addr;
    uint32_t kern_proc_addr;
    uint32_t kern_task_addr;
    uint32_t kern_vm_map;
    int version[3];
    struct {
        struct {
            int vm_map;
            int next;
            int prev;
            int itk_self;
            int itk_space;
            int bsd_info;
            int flags;
        } task;
        struct {
            int cr_svuid;
            int cr_svgid;
        } ucred;
        struct {
            int object;
            int offset;
            int size;
        } vm_named_entry;
        struct {
            int io_bits;
            int io_references;
            int ip_receiver;
            int ip_kobject;
            int ip_srights;
        } ipc_port;
        struct {
            int pid;
            int ucred;
            int cs_flags;
            int p_fd;
        } proc;
        struct {
            int is_table;
        } ipc_space;
        struct {
            int size;
        } ipc_entry;
    } offsets;
} kinfo_t;

extern kinfo_t *kinfo;

int run_exploit(void);

#endif /* exploit_h */
